apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def debugKeyPath = new File(System.properties['user.home'], ".android/debug.keystore")

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.frostnerd.smokescreen"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 80
        versionName "2.1.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def sentryDSN = String.valueOf(getSystemVariableOrDefault("NEBULO_SENTRY_DSN", "dummy"))
        def sentryConfigServer = String.valueOf(getSystemVariableOrDefault("NEBULO_SENTRY_CONFIGSERVER", "dummy"))
        buildConfigField("Boolean", "FROM_CI", String.valueOf(getSystemVariableOrDefault("CI_COMMIT_SHORT_SHA", "") != ""))
        buildConfigField("String", "COMMIT_HASH", '"' + getGitCommitHash() + '"')
        buildConfigField("String", "SENTRY_DSN", '"' + sentryDSN+ '"') // A valid Sentry DSN, or "dummy"
        buildConfigField("String", "SENTRY_DSN_CONFIGSERVER", '"' + sentryConfigServer + '"') // A host which returns a valid Sentry DSN on GET, or "dummy". If both are dummy Sentry is disabled.
        buildConfigField("Boolean", "SENTRY_ENABLED", 'true')
        buildConfigField("Boolean", "SHOW_DOQ", 'false')
        buildConfigField("Boolean", "SHOW_INTRO", 'false')
        buildConfigField("Boolean", "IN_APP_UPDATES", "false")
        buildConfigField("Boolean", "LEAK_DETECTION", "false")
        buildConfigField("Boolean", "SHOW_ALL_SERVERS", "true")

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        vectorDrawables {
            useSupportLibrary = true
        }
    }
    signingConfigs {
        fromVariablesOrDebug {
            storeFile new File(getSystemVariableOrDefault("KEYSTORE_FILE", debugKeyPath.path))
            storePassword getSystemVariableOrDefault("KEYSTORE_PASSWORD", "android")
            keyAlias = getSystemVariableOrDefault("KEYSTORE_KEY_NAME", "androiddebugkey")
            keyPassword getSystemVariableOrDefault("KEYSTORE_KEY_PASSWORD", "android")
        }
        release {
            storeFile new File(getSystemVariableOrDefault("KEYSTORE_FILE", ""))
            storePassword getSystemVariableOrDefault("KEYSTORE_PASSWORD", "")
            keyAlias = getSystemVariableOrDefault("KEYSTORE_KEY_NAME", "")
            keyPassword getSystemVariableOrDefault("KEYSTORE_KEY_PASSWORD", "")
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            initWith buildTypes.debug
        }
        leakCanary {
            matchingFallbacks = ['debug']
            initWith buildTypes.debug
            buildConfigField("Boolean", "LEAK_DETECTION", "true")
        }
        unsignedRelease {
            minifyEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "releaseChannel"
    productFlavors {
        store {
            matchingFallbacks = ['default']
            dimension "releaseChannel"
            buildConfigField("Boolean", "IN_APP_UPDATES", "true")
            buildConfigField("Boolean", "SHOW_ALL_SERVERS", "false")
        }
        fdroidofficial {
            matchingFallbacks = ['fdroid']
            dimension "releaseChannel"
            versionNameSuffix "-adblock"
            versionCode 80
            buildConfigField("Boolean", "SENTRY_ENABLED", 'false')
        }
        fdroid {
            matchingFallbacks = ['default']
            dimension "releaseChannel"
            versionNameSuffix "-adblock"
            versionCode 80
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        debug.assets.srcDirs += files("$projectDir/schemas".toString())
        fdroidofficial.res.srcDirs += "src/fdroid/res"
        fdroidofficial.java.srcDirs += "src/fdroidofficial/java"
        fdroidofficial.java.srcDirs += "src/fdroidofficial/res"
        fdroid.java.srcDirs += "src/cronet/java"
        store {
            java.srcDirs += "src/cronet/java"
        }
    }
    packagingOptions {
        exclude 'META-INF/library_release.kotlin_module'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions{
        disable 'MissingTranslation'
        disable 'InvalidPeriodicWorkRequestInterval'
    }
    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

// Uncomment to force a dependency version
//configurations.all {
//    resolutionStrategy {
//        force 'com.example:example:1.2.3'
//    }
//}

def frostnerdLifecycleVersion = "1.2.4"
def frostnerdPreferencesVersion = "1.5.33"
def frostnerdNavigationVersion = "1.4.5"
def frostnerdDnsProxyVersion = "2.21"
def frostnerdGeneralVersion = "1.0.28"
def frostnerdAdaptersVersion = "1.3.8"

// TODO Clone, build & publishToMavenLocal for libraries with versions defined above for fdroidofficial flavor
// for https://gitlab.com/fdroid/fdroiddata/-/merge_requests/9142

dependencies {
    def room_version = "2.3.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$KOTLIN_VERSION"
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2')
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'


    implementation "com.frostnerd.utilskt:lifecycle:$frostnerdLifecycleVersion" // https://git.frostnerd.com/AndroidUtils/lifecyclekt
    implementation "com.frostnerd.utilskt:preferences:$frostnerdPreferencesVersion" // https://git.frostnerd.com/AndroidUtils/preferenceskt
    implementation "com.frostnerd.utilskt:navigationdraweractivity:$frostnerdNavigationVersion" // https://git.frostnerd.com/AndroidUtils/navigationdraweractivity
    implementation "com.frostnerd.utilskt:encrypteddnstunnelproxy:$frostnerdDnsProxyVersion" // https://git.frostnerd.com/AndroidUtils/encrypteddnstunnelproxy
    implementation "com.frostnerd.utilskt:general:$frostnerdGeneralVersion" // https://git.frostnerd.com/AndroidUtils/generalkt
    implementation "com.frostnerd.utilskt:adapters:$frostnerdAdaptersVersion" // https://git.frostnerd.com/AndroidUtils/Adapters

    storeImplementation 'com.google.android.gms:play-services-cronet:17.0.1'
    fdroidImplementation 'com.google.android.gms:play-services-cronet:17.0.1'

    implementation 'androidx.work:work-runtime:2.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation "androidx.preference:preference:1.1.1"
    implementation "com.google.android.material:material:1.4.0"
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0-alpha01'
    implementation "androidx.core:core-ktx:1.7.0"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-coroutines:2.1.0-alpha04"
    testImplementation "androidx.room:room-testing:$room_version"

    implementation 'io.sentry:sentry-android:3.2.0'

    implementation 'com.github.jorgecastilloprz:fabprogresscircle:1.01@aar'

    leakCanaryImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    implementation "com.squareup.okhttp3:okhttp:4.9.2"
    implementation 'com.squareup.okhttp3:okhttp-dnsoverhttps:4.9.2'
    implementation 'com.github.AppIntro:AppIntro:6.1.0'

    storeImplementation 'com.google.android.play:core:1.10.2'
    fdroidImplementation 'com.google.android.play:core:1.10.2'
}

def getGitCommitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}